{{- if .Values.ha.enabled -}}
{{- range $i := until 2 }}
{{- with $ }}
---
apiVersion: sparkoperator.k8s.io/v1beta2
kind: SparkApplication
metadata:
  name:  {{ printf "%s-%d" (.Release.Name | trunc 61 ) $i }}
  namespace: {{ .Release.Namespace }}
  labels:
    chartname: {{ .Chart.Name | trunc 63 | quote }}
    release: {{ printf "%s-%d" (.Release.Name | trunc 61 ) $i }}
    revision: {{ .Release.Revision | quote }}
    sparkVersion: {{ .Values.sparkVersion | quote }}
    version: {{ .Chart.Version | quote }}
spec:
  type: "Python"
  pythonVersion: {{ .Values.pythonVersion | quote }}
  mode: "cluster"
  image: {{ required "Please provide an image" .Values.image }}:{{ required "Please provide an image version" .Values.imageVersion }}
  imagePullPolicy: {{ .Values.imagePullPolicy }}
  mainApplicationFile: {{ required "Please provide a main application file." .Values.mainApplicationFile | quote }}
  sparkVersion: {{ .Values.sparkVersion | quote }}
  restartPolicy:
    type: {{ .Values.restartPolicy.type }}
    onFailureRetries: {{ .Values.restartPolicy.onFailureRetries }}
    onFailureRetryInterval: {{ .Values.restartPolicy.onFailureRetryInterval }}
    onSubmissionFailureRetries: {{ .Values.restartPolicy.onSubmissionFailureRetries }}
    onSubmissionFailureRetryInterval: {{ .Values.restartPolicy.onSubmissionFailureRetryInterval }}
  {{- if .Values.sparkConf }}
  sparkConf:
  {{- range $conf, $value := .Values.sparkConf }}
    {{ $conf | quote }}: {{ $value | quote }}
  {{- end }}
  {{- end }}
  {{- if .Values.volumes }}
  volumes:
{{ toYaml .Values.volumes | indent 3 }}
  {{- end }}
  {{- if or .Values.jarDependencies .Values.fileDependencies }}
  deps:
    {{- if .Values.jarDependencies }}
    jars:
    {{- range .Values.jarDependencies }}
      - {{ . | quote }}
    {{- end }}
    {{- end }}
    {{- if .Values.fileDependencies }}
    files:
    {{- range .Values.fileDependencies }}
      - {{ . | quote }}
    {{- end }}
    {{- end }}
  {{- end }}
  driver:
    env:
      - name: IMAGE_NAME
        value: {{ .Values.image }}:{{ .Values.imageVersion }}
      - name: POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
    {{- if .Values.driver.env }}
{{ toYaml .Values.driver.env | indent 6 }}
    {{- end }}
    {{- if .Values.driver.javaOptions }}
    javaOptions: {{ .Values.driver.javaOptions }}
    {{- end }}
    securityContext:
      privileged: {{ .Values.privileged }}
    cores: {{ .Values.driver.cores }}
    memory: {{ .Values.driver.memory }}
    hostNetwork: {{ .Values.hostNetwork | default false}}
    labels:
      app.kubernetes.io/name: {{ printf "%s-%d-driver" (.Release.Name | trunc 61 ) $i }}
      k8s-app: {{ printf "%s-ha" .Release.Name }}
      release: {{ printf "%s-%d" (.Release.Name | trunc 61 ) $i }}
      revision: {{ .Release.Revision | quote }}
      sparkVersion: {{ .Values.sparkVersion | quote }}
      version: {{ .Chart.Version | quote }}
    {{- if .Values.driver.labels }}
    {{- range $name, $value := .Values.driver.labels }}
      {{ $name }}: {{ $value }}
    {{- end }}
    {{- end}}
    serviceAccount: {{ required "Please provide a rbac.serviceAccountDriver" .Values.rbac.serviceAccountDriver }}
    {{- if .Values.volumeMounts }}
    volumeMounts:
{{ toYaml .Values.volumeMounts | indent 6 }}
    {{- end }}
    {{- if .Values.initContainers }}
    initContainers:
{{ toYaml .Values.initContainers | indent 6 }}
    {{- end }}
    {{- if .Values.driver.lifecycle}}
    lifecycle:
{{ toYaml .Values.driver.lifecycle | indent 6 }}
    {{- end }}
    terminationGracePeriodSeconds: {{ .Values.driver.terminationGracePeriodSeconds }}
  executor:
    env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
    {{- if .Values.executor.env }}
{{ toYaml .Values.executor.env | indent 6 }}
    {{- end }}
    {{- if .Values.executor.javaOptions }}
    javaOptions: {{ .Values.executor.javaOptions }}
    {{- end }}
    securityContext:
      privileged: {{ .Values.privileged }}
    cores: {{ .Values.executor.cores }}
    instances: {{ .Values.executor.instances }}
    memory: {{ .Values.executor.memory }}
    hostNetwork: {{ .Values.hostNetwork | default false}}
    labels:
      release: {{ printf "%s-%d" (.Release.Name | trunc 61 ) $i }}
      revision: {{ .Release.Revision | quote }}
      sparkVersion: {{ .Values.sparkVersion | quote }}
      version: {{ .Chart.Version | quote }}
    {{- if .Values.executor.labels }}
    {{- range $name, $value := .Values.executor.labels }}
      {{ $name }}: {{ $value }}
    {{- end }}
    {{- end}}
    serviceAccount: {{ .Values.rbac.serviceAccountExecutor }}
    {{- if .Values.volumeMounts }}
    volumeMounts:
{{ toYaml .Values.volumeMounts | indent 6 }}
    {{- end }}
    {{- if .Values.initContainers }}
    initContainers:
{{ toYaml .Values.initContainers | indent 6 }}
    {{- end }}
    terminationGracePeriodSeconds: {{ .Values.executor.terminationGracePeriodSeconds }}
  {{- if .Values.jmxExporterJar }}
  {{- if .Values.priorityClassName }}
  {{- if .Values.sparkUIOptions }}
  sparkUIOptions:
{{ toYaml .Values.sparkUIOptions | indent 4 }}
  {{- end }}
  batchSchedulerOptions:
    priorityClassName: {{ .Values.priorityClassName }}
  {{- end }}
  monitoring:
    exposeDriverMetrics: true
    exposeExecutorMetrics: true
    prometheus:
      jmxExporterJar: {{ .Values.jmxExporterJar }}
      port: {{ .Values.jmxPort | default 8090 }}
  {{- end }}
{{- end }}
{{- end }}
{{- end }}
