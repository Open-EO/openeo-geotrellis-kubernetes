---
apiVersion: sparkoperator.k8s.io/v1beta2
kind: SparkApplication
metadata:
  name:  {{ .Release.Name | trunc 63 }}
  namespace: {{ .Release.Namespace }}
  labels:
    chartname: {{ .Chart.Name | trunc 63 | quote }}
    release: {{ .Release.Name | trunc 63 | quote }}
    revision: {{ .Release.Revision | quote }}
    sparkVersion: {{ .Values.sparkVersion | quote }}
    version: {{ .Chart.Version | quote }}
spec:
  type: "Python"
  pythonVersion: {{ .Values.pythonVersion | quote }}
  mode: "cluster"
  image: {{ required "Please provide an image" .Values.image }}:{{ required "Please provide an image version" .Values.imageVersion }}
  imagePullPolicy: {{ .Values.imagePullPolicy }}
  mainApplicationFile: {{ required "Please provide a main application file." .Values.mainApplicationFile | quote }}
  sparkVersion: {{ .Values.sparkVersion | quote }}
  restartPolicy:
    type: {{ .Values.restartPolicy.type }}
    onFailureRetries: {{ .Values.restartPolicy.onFailureRetries }}
    onFailureRetryInterval: {{ .Values.restartPolicy.onFailureRetryInterval }}
    onSubmissionFailureRetries: {{ .Values.restartPolicy.onSubmissionFailureRetries }}
    onSubmissionFailureRetryInterval: {{ .Values.restartPolicy.onSubmissionFailureRetryInterval }}
  {{- if .Values.sparkConf }}
  sparkConf:
  {{- range $conf, $value := .Values.sparkConf }}
    {{ $conf | quote }}: {{ $value | quote }}
  {{- end }}
  {{- end }}
  timeToLiveSeconds: {{ .Values.timeToLiveSeconds }}
  {{- if or .Values.volumes (not .Values.existingConfigMaps) }}
  volumes:
  {{- with .Values.volumes }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if .Values.configMaps.backendConfig }}
    - configMap:
        name: {{ include "sparkapplication.fullname" . }}-backend-config
      name: {{ include "sparkapplication.fullname" . }}-backend-config
  {{- end }}
  {{- if .Values.configMaps.batchJobLog4j2 }}
    - configMap:
        name: {{ include "sparkapplication.fullname" . }}-batch-job-log4j2
      name: {{ include "sparkapplication.fullname" . }}-batch-job-log4j2
  {{- end }}
  {{- if .Values.configMaps.customBatchConfig }}
    - configMap:
        name: {{ include "sparkapplication.fullname" . }}-custom-batch-config
      name: {{ include "sparkapplication.fullname" . }}-custom-batch-config
  {{- end }}
  {{- if .Values.configMaps.httpCredentials }}
    - configMap:
        name: {{ include "sparkapplication.fullname" . }}-http-credentials
      name: {{ include "sparkapplication.fullname" . }}-http-credentials
  {{- end }}
  {{- if .Values.configMaps.layerCatalog }}
    - configMap:
        name: {{ include "sparkapplication.fullname" . }}-layercatalog
      name: {{ include "sparkapplication.fullname" . }}-layercatalog
  {{- end }}
  {{- if .Values.configMaps.log4j2 }}
    - configMap:
        name: {{ include "sparkapplication.fullname" . }}-log4j2
      name: {{ include "sparkapplication.fullname" . }}-log4j2
  {{- end }}
  {{- if .Values.configMaps.prometheusConfig }}
    - configMap:
        name: {{ include "sparkapplication.fullname" . }}-prometheus-config
      name: {{ include "sparkapplication.fullname" . }}-prometheus-config
  {{- end }}
  {{- end }}
  {{- if or .Values.jarDependencies .Values.fileDependencies }}
  deps:
    {{- if .Values.jarDependencies }}
    jars:
    {{- range .Values.jarDependencies }}
      - {{ . | quote }}
    {{- end }}
    {{- end }}
    {{- if .Values.fileDependencies }}
    files:
    {{- range .Values.fileDependencies }}
      - {{ . | quote }}
    {{- end }}
    {{- end }}
  {{- end }}
  {{- if .Values.dynamicAllocation }}
  dynamicAllocation:
    enabled: true
    initialExecutors: {{ .Values.dynamicAllocation.initialExecutors }}
    minExecutors: {{ .Values.dynamicAllocation.minExecutors }}
    maxExecutors: {{ .Values.dynamicAllocation.maxExecutors }}
  {{- end }}
  driver:
    {{- if .Values.driver.affinity }}
    affinity:
{{ toYaml .Values.driver.affinity | indent 6 }}
    {{- end }}
    annotations:
      checksum/backend-config: {{ include (print $.Template.BasePath "/configmap_backend_config.yaml") . | sha256sum }}
      checksum/batch-job-log4j2: {{ include (print $.Template.BasePath "/configmap_batch_job_log4j2.yaml") . | sha256sum }}
      checksum/custom-batch-config: {{ include (print $.Template.BasePath "/configmap_custom_batch_config.yaml") . | sha256sum }}
      checksum/http-credentials: {{ include (print $.Template.BasePath "/configmap_http_credentials.yaml") . | sha256sum }}
      checksum/layercatalog: {{ include (print $.Template.BasePath "/configmap_layercatalog.yaml") . | sha256sum }}
      checksum/log4j2: {{ include (print $.Template.BasePath "/configmap_log4j2.yaml") . | sha256sum }}
      checksum/prometheus-config: {{ include (print $.Template.BasePath "/configmap_prometheus_config.yaml") . | sha256sum }}
    env:
      - name: IMAGE_NAME
        value: {{ .Values.image }}:{{ .Values.imageVersion }}
      - name: POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
    {{- if .Values.driver.env }}
      {{- range $key, $value :=  .Values.driver.env }}
      - name: {{ $key }}
        value: {{ $value | quote }}
      {{- end }}
    {{- end }}
    {{- with .Values.driver.extraEnv }}
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- with .Values.global.extraEnv }}
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- if .Values.configMaps.backendConfig }}
      - name: OPENEO_BACKEND_CONFIG
        value: "/opt/backend_config/backendconfig.py"
    {{- end }}
    {{- if .Values.driver.javaOptions }}
    javaOptions: {{ .Values.driver.javaOptions }}
    {{- end }}
    {{- if .Values.driver.podSecurityContext }}
    podSecurityContext:
{{ toYaml .Values.driver.podSecurityContext | indent 6 }}
    {{- end }}
    {{- if .Values.driver.ports }}
    ports:
{{ toYaml .Values.driver.ports | indent 6 }}
    {{- end }}
    securityContext:
      privileged: {{ .Values.privileged }}
    {{- if .Values.driver.cores }}
    cores: {{ .Values.driver.cores }}
    {{- end }}
    {{- if .Values.driver.coreRequest }}
    coreRequest: {{ .Values.driver.coreRequest }}
    {{- end }}
    coreLimit: {{ .Values.driver.coreLimit }}
    memory: {{ .Values.driver.memory }}
    memoryOverhead: {{ .Values.driver.memoryOverhead }}
    hostNetwork: {{ .Values.hostNetwork | default false}}
    labels:
      app.kubernetes.io/name: {{ .Release.Name | trunc 63 }}-driver
      release: {{ .Release.Name | trunc 63 | quote }}
      revision: {{ .Release.Revision | quote }}
      sparkVersion: {{ .Values.sparkVersion | quote }}
      version: {{ .Chart.Version | quote }}
    {{- if .Values.driver.labels }}
    {{- range $name, $value := .Values.driver.labels }}
      {{ $name }}: {{ $value }}
    {{- end }}
    {{- end}}
    serviceAccount: {{ required "Please provide a rbac.serviceAccountDriver" .Values.rbac.serviceAccountDriver }}
  {{- if or .Values.volumeMounts .Values.driver.volumeMounts }}
    volumeMounts:
      {{- with .Values.volumeMounts }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.driver.volumeMounts }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
    {{- if not .Values.existingConfigMaps }}
    {{- if .Values.configMaps.backendConfig }}
      - mountPath: /opt/backend_config/backendconfig.py
        name: {{ include "sparkapplication.fullname" . }}-backend-config
        subPath: backendconfig.py
    {{- end }}
    {{- if .Values.configMaps.batchJobLog4j2 }}
      - mountPath: /opt/batch_job_log4j2.xml
        name: {{ include "sparkapplication.fullname" . }}-batch-job-log4j2
        subPath: batch_job_log4j2.xml
    {{- end }}
    {{- if .Values.configMaps.httpCredentials }}
      - mountPath: /opt/http_credentials/http_credentials.json
        name: {{ include "sparkapplication.fullname" . }}-http-credentials
        subPath: http_credentials.json
    {{- end }}
    {{- if .Values.configMaps.customBatchConfig }}
      - mountPath: /opt/venv/lib64/python3.8/site-packages/openeogeotrellis/deploy/sparkapplication.yaml.j2
        name: {{ include "sparkapplication.fullname" . }}-custom-batch-config
        subPath: sparkapplication.yaml.j2
    {{- end }}
    {{- if .Values.configMaps.layerCatalog }}
      - mountPath: /opt/layercatalog.json
        name: {{ include "sparkapplication.fullname" . }}-layercatalog
        subPath: layercatalog.json
    {{- end }}
    {{- if .Values.configMaps.log4j2 }}
      - mountPath: /opt/log4j2.xml
        name: {{ include "sparkapplication.fullname" . }}-log4j2
        subPath: log4j2.xml
    {{- end }}
    {{- if .Values.configMaps.prometheusConfig }}
      - mountPath: /opt/prometheus_config.yaml
        name: {{ include "sparkapplication.fullname" . }}-prometheus-config
        subPath: prometheus_config.yaml
    {{- end }}
    {{- end }}
  {{- end }}
    {{- if .Values.initContainers }}
    initContainers:
{{ toYaml .Values.initContainers | nindent 6 }}
    {{- end }}
    {{- if .Values.driver.lifecycle}}
    lifecycle:
{{ toYaml .Values.driver.lifecycle | nindent 6 }}
    {{- end }}
    terminationGracePeriodSeconds: {{ .Values.driver.terminationGracePeriodSeconds }}
  executor:
    {{- if .Values.executor.affinity }}
    affinity:
{{ toYaml .Values.executor.affinity | nindent 6 }}
    {{- end }}
    env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
    {{- if .Values.executor.env }}
      {{- range $key, $value :=  .Values.executor.env }}
      - name: {{ $key }}
        value: {{ $value | quote }}
      {{- end }}
    {{- end }}
    {{- with .Values.executor.extraEnv }}
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- with .Values.global.extraEnv }}
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- if .Values.executor.javaOptions }}
    javaOptions: {{ .Values.executor.javaOptions }}
    {{- end }}
    {{- if .Values.executor.podSecurityContext }}
    podSecurityContext:
{{ toYaml .Values.executor.podSecurityContext | indent 6 }}
    {{- end }}
    securityContext:
      privileged: {{ .Values.privileged }}
    {{- if .Values.executor.cores }}
    cores: {{ .Values.executor.cores }}
    {{- end }}
    {{- if .Values.executor.coreRequest }}
    coreRequest: {{ .Values.executor.coreRequest }}
    {{- end }}
    coreLimit: {{ .Values.executor.coreLimit }}
    instances: {{ .Values.executor.instances }}
    memory: {{ .Values.executor.memory }}
    memoryOverhead: {{ .Values.executor.memoryOverhead }}
    hostNetwork: {{ .Values.hostNetwork | default false}}
    labels:
      release: {{ .Release.Name | trunc 63 | quote }}
      revision: {{ .Release.Revision | quote }}
      sparkVersion: {{ .Values.sparkVersion | quote }}
      version: {{ .Chart.Version | quote }}
    {{- if .Values.executor.labels }}
    {{- range $name, $value := .Values.executor.labels }}
      {{ $name }}: {{ $value }}
    {{- end }}
    {{- end}}
    serviceAccount: {{ .Values.rbac.serviceAccountExecutor }}
  {{- if or .Values.volumeMounts .Values.executor.volumeMounts }}
    volumeMounts:
      {{- with .Values.volumeMounts }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.executor.volumeMounts }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
    {{- if not .Values.existingConfigMaps }}
    {{- if .Values.configMaps.backendConfig }}
      - mountPath: /opt/backend_config/backendconfig.py
        name: {{ include "sparkapplication.fullname" . }}-backend-config
        subPath: backendconfig.py
    {{- end }}
    {{- if .Values.configMaps.batchJobLog4j2 }}
      - mountPath: /opt/batch_job_log4j2.xml
        name: {{ include "sparkapplication.fullname" . }}-batch-job-log4j2
        subPath: batch_job_log4j2.xml
    {{- end }}
    {{- if .Values.configMaps.httpCredentials }}
      - mountPath: /opt/http_credentials/http_credentials.json
        name: {{ include "sparkapplication.fullname" . }}-http-credentials
        subPath: http_credentials.json
    {{- end }}
    {{- if .Values.configMaps.prometheusConfig }}
      - mountPath: /opt/prometheus_config.yaml
        name: {{ include "sparkapplication.fullname" . }}-prometheus-config
        subPath: prometheus_config.yaml
    {{- end }}
    {{- if .Values.configMaps.backendConfig }}
      - mountPath: /opt/backend_config/backendconfig.py
        name: {{ include "sparkapplication.fullname" . }}-backend-config
        subPath: backendconfig.py
    {{- end }}
    {{- if .Values.configMaps.log4j2 }}
      - mountPath: /opt/log4j2.xml
        name: {{ include "sparkapplication.fullname" . }}-log4j2
        subPath: log4j2.xml
    {{- end }}
    {{- end }}
  {{- end }}
    {{- if .Values.initContainers }}
    initContainers:
{{ toYaml .Values.initContainers | indent 6 }}
    {{- end }}
    {{- if .Values.executor.lifecycle}}
    lifecycle:
{{ toYaml .Values.executor.lifecycle | indent 6 }}
    {{- end }}
    terminationGracePeriodSeconds: {{ .Values.driver.terminationGracePeriodSeconds }}
  {{- if .Values.sparkUIOptions }}
  sparkUIOptions:
{{ toYaml .Values.sparkUIOptions | indent 4 }}
  {{- end }}
  {{- if .Values.priorityClassName }}
  batchSchedulerOptions:
    priorityClassName: {{ .Values.priorityClassName }}
  {{- end }}
  {{- if .Values.jmxExporterJar }}
  monitoring:
    exposeDriverMetrics: true
    exposeExecutorMetrics: true
    prometheus:
      {{- if .Values.monitoring.prometheus.configFile }}
      configFile: {{ .Values.monitoring.prometheus.configFile }}
      {{- end }}
      jmxExporterJar: {{ .Values.jmxExporterJar }}
      port: {{ .Values.jmxPort | default 8090 }}
  {{- end }}
